name: CI

# trigger on pushes and PRs targeting only main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-format-test:
    runs-on: ubuntu-latest

    steps:
      # 1. check out your code
      - uses: actions/checkout@v4

      # ─── Backend ────────────────────────────────────────────────────────
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black==24.10.0 isort==5.13.2 flake8==7.2.0 pytest

      - name: Check formatting (Black)
        run: black --check --line-length=88 backend

      - name: Check imports (isort)
        run: isort --check-only --profile=black backend

      - name: Lint (Flake8)
        run: flake8 backend --max-line-length=88 --extend-ignore=E203

      - name: Provide dummy OpenAI key for tests
        run: echo "OPENAI_API_KEY=test" >> $GITHUB_ENV

      - name: Run backend tests
        working-directory: backend
        run: pytest --maxfail=1 --disable-warnings -q

      # ─── Frontend ───────────────────────────────────────────────────────
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Lint and fix (ESLint via npm script)
        working-directory: frontend
        run: npm run lint

      - name: TypeScript check
        working-directory: frontend
        run: npx tsc --noEmit --skipLibCheck

      - name: Run frontend tests
        working-directory: frontend
        run: npm test -- --watchAll=false --bail

      # ─── Pre-commit validation ─────────────────────────────────────────
      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit on all files
        run: pre-commit run --all-files

  # Optional: Separate job for pre-commit.ci integration
  pre-commit-ci:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - uses: pre-commit/action@v3.0.1
